import { AfterData, AfterRoot } from "@jaredpalmer/after";
import { getAssests } from "afterjs-assets";
import React from "react";

// This will be generated by webpack
// eslint-disable-next-line import/no-unresolved
import manifest from "../build/manifest.json";
import { routes } from "./routes";
import { withLayout } from "./layout.js";

function Document(props) {
  const { helmet, styles, scripts, css, ids } = props;
  const htmlAttrs = helmet.htmlAttributes.toComponent();
  const bodyAttrs = helmet.bodyAttributes.toComponent();

  return (
    <html {...htmlAttrs}>
      <head>
        <Preload scripts={scripts} styles={styles} />
        <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        {helmet.title.toComponent()}
        {helmet.meta.toComponent()}
        {helmet.link.toComponent()}
        <style
          data-emotion-css={ids.join(" ")}
          dangerouslySetInnerHTML={{ __html: css }}
        />
        <Styles styles={styles} />
      </head>
      <body {...bodyAttrs}>
        <AfterRoot />
        <AfterData />
        <ModuleNomodule />
        <ES6Scripts scripts={scripts} />
        <ES5Scripts scripts={scripts} />
      </body>
    </html>
  );
}

Document.getInitialProps = async function({ assets, renderPage, req }) {
  const page = await renderPage(withLayout);
  const { styles: stylesArray, scripts: scriptsArray } = getAssests({
    req,
    routes,
    manifest
  });

  const scripts = scriptsArray
    .concat(...assets.client.js)
    // Filter out map files
    .filter(x => x && x.endsWith(".js"));

  const styles = stylesArray.concat(assets.client.css).filter(x => x);

  return { styles, scripts, ...page };
};

function ModuleNomodule() {
  // Fix for Safari 10.1
  //https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc
  return (
    <script
      noModule
      dangerouslySetInnerHTML={{
        __html: `!function(){var e=document,t=e.createElement("script");if(!("noModule"in t)&&"onbeforeload"in t){var n=!1;e.addEventListener("beforeload",function(e){if(e.target===t)n=!0;else if(!e.target.hasAttribute("nomodule")||!n)return;e.preventDefault()},!0),t.type="module",t.src=".",e.head.appendChild(t),t.remove()}}();`
      }}
    ></script>
  );
}

const es6filter = path => path.endsWith(".es6.js");

function Preload({ scripts, styles }) {
  const scriptChunks = scripts.filter(es6filter);
  return (
    <>
      {scriptChunks.map(path => (
        <link
          key={path}
          rel="preload"
          href={path}
          as="script"
          crossOrigin="anonymous"
        />
      ))}
      {styles.map(path => (
        <link key={path} rel="preload" href={path} as="style" />
      ))}
    </>
  );
}

function Styles({ styles }) {
  return (
    <>
      {styles.map(path => (
        <link key={path} rel="stylesheet" href={path} />
      ))}
    </>
  );
}

function ES6Scripts({ scripts }) {
  const scriptChunks = scripts.filter(es6filter);
  return (
    <>
      {scriptChunks.map(path => (
        <script key={path} type="module" src={path} crossOrigin="anonymous" />
      ))}
    </>
  );
}

const es5filter = path => !path.endsWith(".es6.js");

function ES5Scripts({ scripts }) {
  const scriptChunks = scripts.filter(es5filter);
  return (
    <>
      {scriptChunks.map(path => (
        <script
          key={path}
          noModule
          defer
          type="text/javascript"
          src={path}
          crossOrigin="anonymous"
        />
      ))}
    </>
  );
}

export default Document;
